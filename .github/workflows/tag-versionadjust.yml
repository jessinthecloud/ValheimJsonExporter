# This is a basic workflow to help you get started with Actions

on:
  push:
    tags:
      - "v*"

name: Adjust version on tag

jobs:
  build_release:
    name: Adjust version on tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.PUSH_TO_BRANCH }}
          ref: 'master'

      - name: Get the version
        id: get_version
        run: |
          echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
          echo ::set-output name=VERSION_NUMBER::${GITHUB_REF/refs\/tags\/v/}
          echo ::set-output name=VERSION_WITHOUT_BETA::$(echo ${GITHUB_REF/refs\/tags\/v/} | sed -e 's/-.*//')

      # Get build commands
      - name: Get build commands
        run: |
          sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
          echo "deb https://download.mono-project.com/repo/ubuntu stable-bionic main" | sudo tee /etc/apt/sources.list.d/mono-official-stable.list
          wget https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
          sudo dpkg -i packages-microsoft-prod.deb
          sudo apt-get update
          sudo apt-get install -y mono-roslyn mono-complete mono-dbg msbuild unzip dirmngr dotnet-sdk-5.0 dotnet-runtime-5.0

      # Got version and repo, change version inside and push again
      - name: Change packages.config version
        run: |
          sed -e 's/JotunnLib" version=".*" t/JotunnLib" version="${{ steps.get_version.outputs.VERSION_NUMBER }}" t/' JotunnModStub/packages.config > JotunnModStub/p2.c && mv JotunnModStub/p2.c JotunnModStub/packages.config
          sed -e 's/\\JotunnLib\.[0-9][^\\]*/\\JotunnLib.${{ steps.get_version.outputs.VERSION_NUMBER }}/g' -e 's/JotunnLib, Version=.* Culture/JotunnLib, Version=${{ steps.get_version.outputs.VERSION_WITHOUT_BETA }}.0, Culture/' JotunnModStub/JotunnModStub.csproj > JotunnModStub/csproj && mv JotunnModStub/csproj JotunnModStub/JotunnModStub.csproj

      # Install NuGet dependencies
      - name: Install NuGet dependencies
        run: |
          nuget restore JotunnModStub.sln
          dotnet restore JotunnModStub/JotunnModStub.csproj

      # Cache the results
      - name: Cache Valheim
        id: cachevalheim
        uses: actions/cache@v2
        with:
          path: ~/VHINSTALL
          key: ${{ steps.valheimversion.outputs.valheimversion }}-${{ hashFiles('**/lockfiles') }}

      - name: Install SteamCMD
        if: steps.cachevalheim.outputs.cache-hit != 'true'
        uses: CyberAndrii/setup-steamcmd@v1

      # Prepare Valheim dependencies
      - name: Prepare Valheim dependencies
        if: steps.cachevalheim.outputs.cache-hit != 'true'
        run: |
          wget -O bepinex.zip "https://valheim.thunderstore.io/package/download/denikson/BepInExPack_Valheim/5.4.1000/"
          unzip bepinex.zip -d ~/BepInExRaw
          steamcmd +login anonymous +force_install_dir ~/VHINSTALL +app_update 896660 validate +exit
          mv ~/VHINSTALL/valheim_server_Data/ ~/VHINSTALL/valheim_Data/
          mv ~/BepInExRaw/BepInExPack_Valheim/* ~/VHINSTALL/

      - name: remove old hash, publicized dlls and mmhook dlls
        run: |
          rm -rf ~/VHINSTALL/valheim_server_Data/Managed/publicized_assemblies
          rm -rf ~/VHINSTALL/BepInEx/plugins/MMHOOK

      - name: Set references to DLLs
        run: |
          echo "<?xml version=\"1.0\" encoding=\"utf-8\"?><Project ToolsVersion=\"Current\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\"><PropertyGroup><VALHEIM_INSTALL>$HOME/VHINSTALL/</VALHEIM_INSTALL></PropertyGroup></Project>" > Environment.props

      # Build DLLs
      - name: Build solution
        run: |
          msbuild JotunnModStub.sln /p:Configuration=Debug

      # Push changes back to master
      - name: Push version update to prod
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
          git add JotunnModStub/JotunnModStub.csproj
          git add JotunnModStub/packages.config
          git commit -m "deploy: Released ${{ steps.get_version.outputs.VERSION }}"
          git push https://${{ secrets.PUSH_TO_BRANCH }}@github.com/Valheim-Modding/JotunnModStub HEAD:master
